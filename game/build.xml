<project name="PROGRAMA" default="dist" basedir=".">
    <description>
        Build file for the Game.
    </description>

    <!-- set global properties for this build -->
    <property name="src" location="src" relative="yes" />
    <property name="libs" location="libs" relative="yes" />
    <property name="tests" location="test" relative="yes" />
    <property name="build" location="build" relative="yes" />
    <property name="build.test" location="build.test" relative="yes" />
    <property name="docs" location="docs" relative="yes" />
    <property name="tests.report" location="reportes" relative="yes" />
    <property name="dist" location="dist" relative="yes" />
    <property name="mainClass" value="gui.GameGUI" relative="yes" />

    <!-- Define the classpath which includes the libs -->
    <path id="project.class.path">
        <pathelement location="${libs}/junit-4.12.jar" />
        <pathelement location="${libs}/hamcrest-core-1.3.jar" />
        <pathelement location="${build}" />
        <pathelement location="${build.test}" />
    </path>

    <target name="init">
        <!-- Create the time stamp -->
        <tstamp />
        <!-- Create the build directory structure used by compile -->
        <mkdir dir="${build}" />
    </target>

    <target name="compile" depends="init" description="compiles the source code">
        <!-- Compile the java code from ${src} into ${build} -->
        <!--javac includeantruntime="false" srcdir="${src}" destdir="${build}" /-->
        <javac includeantruntime="false" srcdir="${src}" destdir="${build}">   
            <classpath>
                <pathelement path="libs/core.jar"/>
            </classpath>
        </javac>
        <copy todir="build/resource">
            <fileset dir="src/main/resources"/>
        </copy>


    </target>

    <target name="compiletests" depends="compile" description="compile JUnit tests">
        <!-- Create the build directory structure for the tests -->
        <mkdir dir="${build.test}" />
        <!-- Compile the tests -->
        <javac includeantruntime="false" srcdir="${tests}" destdir="${build.test}">
            <classpath refid="project.class.path" />
        </javac>
    </target>

    <target name="test" depends="compiletests" description="executes JUnit tests ">
        <mkdir dir="${tests.report}" />
        <!-- Details in: https://ant.apache.org/manual/Tasks/junit.html -->
        <junit fork="true" printsummary="yes" showoutput="yes" haltonfailure="yes">
            <classpath refid="project.class.path" />
            <formatter type="plain" />
            <batchtest todir="${tests.report}">
                <fileset dir="${tests}">
                    <include name="**/*Test.java" />
                </fileset>
            </batchtest>
        </junit>
    </target>

    <target name="dist" depends="compile" description="generates the distribution">
        <!-- Create the distribution directory -->
        <mkdir dir="${dist}/lib" />
        <jar jarfile="${dist}/lib/${ant.project.name}.jar">
            <manifest>
                <attribute name="Class-Path" value="${ant.project.name}.jar" />
                <attribute name="Main-Class" value="${mainClass}" />
                <!--attribute name="Main-Class" value="icc.Prueba"/-->
                <!--java -jar ${ant.project.name}.jar-->
            </manifest>
            <fileset dir="build" includes="**/*.class" />
            <fileset dir="src" includes="**/*.properties" />
        </jar>
    </target>

    <target name="run" depends="dist">
        <java classname="${mainClass}" fork="true">
            <classpath>
                <pathelement path="build" />
                <pathelement path="libs/core.jar"/>
            </classpath>
        </java>
    </target>

    <target name="clean" description="cleans up">
        <!-- Delete the ${build} and ${dist} directory trees -->
        <delete dir="${build}" />
        <delete dir="${dist}" />
        <delete dir="${build.test}" />
        <delete dir="${tests.report}" />
        <delete dir="${docs}" />
        <delete>
            <fileset dir="." includes="**/*~" defaultexcludes="false" />
        </delete>
        <delete>
            <fileset dir="." includes="**/*.dat" defaultexcludes="false" />
        </delete>
    </target>

    <target name="docs" description="generates javadoc">
        <javadoc destdir="${docs}/${tests}" sourcepath="${src}" author="true" version="true" windowtitle="${ant.project.name}" classpathref="project.class.path">
            <fileset dir="${tests}" defaultexcludes="yes">
                <include name="**/*.java" />
            </fileset>
        </javadoc>
        <javadoc destdir="${docs}/${src}" author="true" version="true" windowtitle="${ant.project.name}">
            <fileset dir="${src}" defaultexcludes="yes">
                <include name="**/*.java" />
            </fileset>
        </javadoc>
    </target>
</project>